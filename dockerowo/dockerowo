2234  docker
 2235  sudo apt install docker.io
 2236  docker
 2240  docker --version
 2241  docker run hello-world
 2242  sudo docker run hello-world
 2243  grep docker /etc/group
 2244  sudo groupadd docker
 2245  grep docker /etc/group
 2246  exit
 2247  grep docker /etc/group
 2248  docker run hello-world
 2249  sudo docker run hello-world
 2250  groups cray
 2251  sudo usermod -aG docker cray
 2252  docker info
 2253  sudo groupadd Docker
 2254  docker info
 2255  groups cray
 2256  sudo docker info
 2257  docker info
 2258  sudo usermod -aG Docker cray
 2259  docker info
 2260  groups cray
 2261  sudo chmod a+rwx /var/run/docker.sock
 2262  sudo chmod a+rwx /var/run/docker.pid
 2263  docker info
 
##############################################################################################3



docker run i tu np mysql:5.5
dockerHub?, hubdocker.io
docker run mysql:5.5 -v data:data podmontowuje katalog data wewnatrz kontenera do katalogu na kompie

docker ps pokazuje kontenery dzialajace

docker run --name=mysql1 -d mysql/mysql-server:5.5
docker container list
docker image list

docker exec -it(interaktywnie) mysql1 bash
docker logs mysql1

docker > kubernetes > openshift

##################3zajecia2 ################3
Docker zapewnia izolacje wiec jest to bezpieczne, ale nie zaladuje modulu do kernela albo nie skontaktuje sie z firewallem

docker image pull nginx
docker run -d --name nginx-test -p 8080:80 nginx
docker container inspect nginx-test

docker stop nginx-test
docker ps -a
docker rm nginx-test usuwa kontener
docker rmi nginx-test usuwa obraz

budowanie kontenerow ###################################################

przy alpine jest apk zamiast apt
docker image pull alpine

docker run -it --rm alpine /bin/ash
robisz jak chcesz sprawdzic czy cos zadziala bo rm usunie kontener po wyjsciu

alpine to dystrybucja linuxa totalnie ogolocona stosowana do budowy kontenerow

entry point to proces wykonywany na koncu ktory jest sednem istnienia kontenera. po jego ubiciu kontener pada

dockerowe pliki sa .yaml
wget http://dl-8.alpinelinux.org/alpine/v3.6/releases/x86_64/alpine-minirootfs-3.6.1-x86_64.tar.gz

docker build --tag=alpine:0.1 .
docker run -it 7a87e7bcd194 /bin/sh

docker run --name some-mongo -d mongo
docker ps
docker run -it --network some-net mongo mongo --host some-mongo test

2378  docker ps
 2379  docker stop ee461090d2a9
 2380  docker rm ee461090d2a9
 2381  docker ps -a
 2382  docker ps -a | grep mongo
 2383  docker stop 90a2ce7126ac
 2384  docker rm 90a2ce7126ac
 2385  docker rmi mongo

czyszczenie 
docker kill $(docker ps -q)  zabija aktywne kontenery
docker rm $(docker ps -q -a) deletuje kontenery
docker rmi $(docker images -q) wywala obraz

CMD startuje podczas odpalania kontenera
RUN dziala podczas budowania obrazu


docker build --tag local/php7 .
--tag local/doom:0.1 .
docker image ls
docker run -d -p 8080:80 fefe16ba0c28


docker login
docker image tag e424e9298457 patocki/flashdoom:1.0
docker image push patocki/flashdoom:1.0


####################3 nowy Dockerfile ############
FROM patocki/flashdoom
RUN rm -rf /var/www/localhost/htdocs/index.html
COPY files/index.html /var/www/localhost/htdocs/


/\ ogolocony, robiac pulla reszta sobie porzadzi z budowaniem
obraz juz jest

###########################   WOLUMENY  ############################3
wolumeny - persistent storage
katalog wenatrz kontenera zmapowany na katalog na zewnatrz kontenera
np OverlayFS?

docker volume create Volumen
docker run -v Volumen:/katalog

docker run -it -v /home/cray/SDA/dockerowo:/files alpine /bin/sh
mount | grep files

docker exec -it idcontenera /bin/sh
/\ to wchodzi do ddzialajacego kontenera z shelem zeby sobie posmigac


tu wyswietli gdzie jest podlaczone
alpine ... wpisujemy zeby dzialac na shellu wewnatrz kontenera

Podpinamy wolumen przy tworzeniu nowej infrastruktury. Przy istniejacych kontenerach raczej sie nie da. Chyba, ze jest o baza danych to jakies rozwiazanie musi byc



############################# COMPOSE ###############################
docker network create my-net # to jest nazwa
sieci moga byc bridge(default), host, null

redis - baza danych w pamieci, super szybka
docker pull redis:alpine
docker image pull russmckendrick/moby-counter

docker container run -d --name redis --network my-net redis:alpine

docker container run -d --name moby-counter --network my-net -p 8080:80 russmckendrick/moby-counter

jak jest plik docker-compose.yml
to wpisuje
docker-compose up i smiga
docker-compose start juz na produkcji
/stop

#########################################################
docker ps
docker attach abc123ntg555- wchodzi do dzialajacego kontenera

############# KUBERNETES
minikube....
minishift...
male wersje do sprawdzenia jak to dziala. Odpala sie na jednej maszynie
narzedzie do zarzadzania klastrami?
OpenStack - oprogramowanie do wirtualizacji na wielka skale jak DataCentre

okd = openshift tylko darmowy
OpenShift narzedzie sluzace do zarzadzania i skalowaniem kontenerami
to nakladka na kubernetesa
albo kubernetes albo Openshift ktory zawiera w sobie kubernetesa

docker inspect

docker run -p 8080:80 -e PHPVERSION="5"
-p jak port
-e jako ENV czyli zmienna srodowiskowa
-d detach
-v volume

FROM alpine:latest
LABEL mainter="ktokolwiek <someone@example.com>"
LABEL description="Docker with apacheand php7"
#ooo TU ENV PHPVERSION 7
RUN apk add --update apache2 php${PHPVERSION}-apache2 php${PHPVERSION} && \
rm -rf /var/cache/apk/* && \
rm -rf /run/apache2 && \
mkdir /run/apache2 && \
rm -rf /var/www/localhost/htdocs/index.html && \
echo "<?php phpinfo(); ?>" > /var/www/localhost/htdocs/index.php && \
chmod 755 /var/www/localhost/htdocs/index.php
#ADD files/moja_gra.php /var/www
EXPOSE 80/tcp
ENTRYPOINT ["httpd"]
CMD ["-D", "FOREGROUND"]
#COPY
#ADD


docker network prune
docker container prune
docker image prune

komenda prune czysci 
kontenery niedzialajace
image na podstawie ktorych nic nie zostalo zbudowane
networki nieuzywane





